label=lab)
legend(1,1.1,c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5,fill=rainbow(length(p1)))
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),
label=lab)
legend(1,1.1,c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5,fill=rainbow(length(p1)))
# *** : 행과 열을 바꿔주는 기능 t() :transpose
class(t(qty))
barplot(t(qty),main="Fruit's Sales QTY",ylim=(0,900),
col=rainbow(length(qty)),space=0.1,cex.axis=0.8,las=1,
names.arg = c("MON","TUE","WED","THU","FRI"),cex=0.8)
barplot(t(qty),main="Fruit's Sales QTY",ylim=c(0,900),
col=rainbow(length(qty)),space=0.1,cex.axis=0.8,las=1,
names.arg = c("MON","TUE","WED","THU","FRI"),cex=0.8)
length(qty)
pct <- round(p1/sum(p1)*100,1)
lab <- paste(pct," %")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),
label=lab)
legend(1,1.1,c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5,fill=rainbow(length(p1)))
pct  <- round(p1/sum(p1)*100,1)
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1," \n",pct," %")
a
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),
label=lab2)
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
### 3D 파이모양의 차트 그리기
install.packages('plotrix')
library(plotrix)
### 파이모양의 차트 그리기
par(mfrow=c(1,1),oma=c(0.5,0.5,0.1,0.1))
p1 <- c(10,20,30,40)
pie(p1,radius=1)                  # radius : 원형의 크기
pie(p1,radius=1,init.angle = 90)  # init.angle 시작각도 90도
pie(p1,radius=1,init.angle = 90,
col=rainbow(length(p1)),
label=c("Week 1","Week 2","Week 3","Week"))
#1.
pct  <- round(p1/sum(p1)*100,1)
### 파이모양의 차트 그리기
par(mfrow=c(1,1),oma=c(0.5,0.5,0.1,0.1))
p1 <- c(10,20,30,40)
pie(p1,radius=1)                  # radius : 원형의 크기
pie(p1,radius=1,init.angle = 90)  # init.angle 시작각도 90도
pie(p1,radius=1,init.angle = 90,
col=rainbow(length(p1)),
label=c("Week 1","Week 2","Week 3","Week"))
### 파이모양의 차트 그리기
par(mfrow=c(1,1),oma=c(0.5,0.5,0.1,0.1))
p1 <- c(10,20,30,40)
pie(p1,radius=1)                  # radius : 원형의 크기
pie(p1,radius=1,init.angle = 90)  # init.angle 시작각도 90도
p1 <- c(10,20,30,40)
pie(p1,radius=1)                  # radius : 원형의 크기
pie(p1,radius=1,init.angle = 90)  # init.angle 시작각도 90도
p1 <- c(10,20,30,40)
pie(p1,radius=1)                  # radius : 원형의 크기
pie(p1,radius=1,init.angle = 90)  # init.angle 시작각도 90도
pie(p1,radius=1,init.angle = 90)  # init.angle 시작각도 90도
sum(p1)
round(p1/sum(p1)*100,1)
p1 <- c(10,20,30,40,50)
round(p1/sum(p1)*100,1)
round(p1/sum(p1)*100,1)
p1 <- c(10,20,30,40,50)
round(p1/sum(p1)*100,1)
sum(p1)
sum(p1)*100
p1/sum(p1)
p1/sum(p1)*100
round(p1/sum(p1)*100,1)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05)
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
p1 <- c(10,20,30,40,50)
f_day   <- round(p1/sum(p1)*100,1)
f_label <- paste(f_day, " %")
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05)
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
explode=0.05
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.9,labels=f_label,explode=0.05)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=1,labels=f_label,explode=0.05)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=10,labels=f_label,explode=0.05)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=10,labels=f_label,explode=0.05)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=10,labels=f_label,explode=0.05)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=1)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05)
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.05,labels=f_label,explode=0.05) # explode 간격조정
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=10,labels=f_label,explode=0.05) # explode 간격조정
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.05,labels=f_label,explode=0.05) # explode 간격조정
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=10,labels=f_label,explode=0.05) # explode 간격조정
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05) # explode 간격조정
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=10,labels=f_label,explode=0.05) # explode 간격조정
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05) # explode 간격조정
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
labels=f_label,explode=0.05) # explode 간격조정
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
labels=f_label,explode=0.05) # explode 간격조정
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05) # explode 간격조정
pie3D(p1, main="3D Pie Chart", col=rainbow(length(p1)),
cex=0.5,labels=f_label,explode=0.05) # explode 간격조정
legend(0.5,1,c("MON","TUE","WED","THU","FRI"),cex=0.6,
fill=rainbow(length(p1)))
iris
v1 <- c(10,12,15,11,20)
v2 <- c(5,7,15,8,9)
v3 <- c(11,20,15,18,13)
boxplot(v1,v2,v3,col=c("blue",'yellow","pink'),
names =c("blue",'yellow","pink'),
horizontal=T)
boxplot(v1,v2,v3,col=c("blue","yellow","pink"),
names =c("blue","yellow","pink"),
horizontal=T)
boxplot(v1,v2,v3,col=c("blue","yellow","pink"),
names =c("blue","yellow","pink"),
horiz=T)
boxplot(v1,v2,v3,col=c("blue","yellow","pink"),
names =c("blue","yellow","pink"),
horizontal=T)
### 관계도 그리기 : igraph() 함수
install.packages("igraph")
library(igraph)
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
savePlot("network_1.png",type="png")
savePlot("network_1.png",type="png")
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
str(g1)
savePlot("network_1.png",type="png")
name <- c('서진수 대표이사','일지매 부장','김유신 과장','손흥민 대리','노정호 대리',
'이순신 부장','유관순 과장','신사임당 대리','강감찬 부장','광개토 과장','정몽주 대리')
pemp <- c('서지눗 대표이사','서진수 대표이사','일지매 부장','김유신 과장','김유신 과장',
'서진수 대표이사','이순신 부장','유관순 과장','서진수 대표이사','강감찬 부장','광개토 과장')
emp  <- data.frame(이름=name,상사이름=pemp)
emp
g    <- graph.data.frame(emp,directed = T)
g
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)
str(g)
str(g)
g    <- graph.data.frame(emp,directed = T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)
str(g)
savePlot("network_2.png",type="png")
g3   <- graph.data.frame(emp,directed=F)
plot(g3,layout=layout.fruchterman.reingold,vertex.size=8,
edge.arrow.size=0.5,vertex.label=NA)
g    <- graph.data.frame(emp,directed = T)
g
name <- c('서진수 대표이사','일지매 부장','김유신 과장','손흥민 대리','노정호 대리',
'이순신 부장','유관순 과장','신사임당 대리','강감찬 부장','광개토 과장','정몽주 대리')
pemp <- c('서진수 대표이사','서진수 대표이사','일지매 부장','김유신 과장','김유신 과장',
'서진수 대표이사','이순신 부장','유관순 과장','서진수 대표이사','강감찬 부장','광개토 과장')
emp  <- data.frame(이름=name,상사이름=pemp) ;emp
g    <- graph.data.frame(emp,directed = T)
plot(g,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5)
str(g)
g
g3   <- graph.data.frame(emp,directed=F)
g3
png("graph/network_1.png",width=600,height=600)
g    <- graph.data.frame(emp,directed = T)
plot(g,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5)
dev.off()
# 화살표와ㅑ 이
png("graph/network_2.png",width=600,height=600)
g3   <- graph.data.frame(emp,directed=F)
plot(g3,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5,vertex.label=NA)
dev.off()
g    <- graph.data.frame(emp,directed = T)
plot(g,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5)
# 화살표(directed=F)와 이름 제거(vertex.label=NA)
png("graph/network_2.png",width=600,height=600)
g3   <- graph.data.frame(emp,directed=F)
plot(g3,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5,vertex.label=NA)
g3   <- graph.data.frame(emp,directed=F)
plot(g3,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5,vertex.label=NA)
g3   <- graph.data.frame(emp,directed=F)
plot(g3,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5,vertex.label=NA)
dev.off()
g3   <- graph.data.frame(emp,directed=F)
plot(g3,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5,vertex.label=NA)
g3   <- graph.data.frame(emp,directed=F)
plot(g3,layout=layout.fruchterman.reingold,
vertex.size=8,edge.arrow.size=0.5)
install.packages('devtools')
library(devtools)
install.packages("d3Network")
library(d3Network)
install_github("christophergandrud/d3Network")
install.packages("RCurl")
library(RCurl)
g <- read.csv('군집분석.csv',head=T)
getwd()
setwd(d:/dudwlsrla92/R_Data_Analysis/Part4/data)
setwd('d:/dudwlsrla92/R_Data_Analysis/Part4/data')
g <- read.csv('군집분석.csv',head=T)
g <- graph.data.frame(graph,directed=T)
graph <- data.frame(학생=g$학생,교수=g$교수)
g <- graph.data.frame(graph,directed=T)
plot(g,layout=layout.fruchterman.reingold,
vertex.size=2,edge.arrow.size=0.5,
vertex.color="green",vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,
vertex.size=2,edge.arrow.size=0.5,
vertex.color="green",vertex.label=NA)
setwd('d:/dudwlsrla92/R_Data_Analysis/Part4/data')
getwd()
g <- read.csv('군집분석.csv',head=T)
graph <- data.frame(학생=g$학생,교수=g$교수)
g <- graph.data.frame(graph,directed=T)
plot(g,layout=layout.fruchterman.reingold,
vertex.size=2,edge.arrow.size=0.5,
vertex.color="green",vertex.label=NA)
plot(g,layout=layout.kamada.kawai,
vertex.size=2,edge.arrow.size=0.5,
vertex.label=NA)
plot(g,layout=layout.kamada.kawai,
vertex.size=1,edge.arrow.size=0.5,
vertex.label=NA)
plot(g,layout=layout.kamada.kawai,
vertex.size=2,edge.arrow.size=0.05,
vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,
vertex.size=2,edge.arrow.size=0.05,
vertex.color="green",vertex.label=NA)
V(g)$name
g
plot(g,layout=layout.kamada.kawai,
vertex.size=2,edge.arrow.size=0.05,
vertex.label=NA)
g$학생
g$교수
getwd()
g <- read.csv('군집분석.csv',head=T)
graph <- data.frame(학생=g$학생,교수=g$교수)
g$학생
g$교수
V(g)$name
g <- graph.data.frame(graph,directed=T)
g
V(g)$name
gubun1 <- V(g)
gubun1 <- V(g)$name
gubun1 <- V(g)$name ;gubun1
gubun2 <- str_sub(gubun1,start=1,end=1)
gubun1 <- V(g)$name ;gubun1
gubun2 <- str_sub(gubun1,start=1,end=1)
library(stringr)
gubun2 <- str_sub(gubun1,start=1,end=1)
gubun2
colors <- c()
length(gubun2)
colors <- c()
for (i in 1:length(gubun2)){
if(gubun[i]=='S'){
colors <- c(colors,"red")}
else {
colors <- c(colors,"green")}
}
colors <- c()
for (i in 1:length(gubun2)){
if(gubun2[i]=='S'){
colors <- c(colors,"red")}
else {
colors <- c(colors,"green")}
}
# 학생 점크기 2 / 교수 점크기 6
colors <- c()
# 학생일 경우 red / 교수일 경우 green
colors <- c()
for (i in 1:length(gubun2)){
if(gubun2[i]=='S'){
colors <- c(colors,"red")}
else {
colors <- c(colors,"green")}
}
# 학생 점크기 2 / 교수 점크기 6
sizes <- c()
for (i in 1:length(gubun2)){
if(gubun2[i]=='S'){
sizes <- c(sizes,2)}
else {
sizes <- c(sizes,6)}
}
# 1.
g <- read.csv('군집분석.csv',head=T)
graph <- data.frame(학생=g$학생,교수=g$교수)
g <- graph.data.frame(graph,directed=T)
# 3. 학생일 경우 red / 교수일 경우 green
colors <- c()
for (i in 1:length(gubun2)){
if(gubun2[i]=='S'){
colors <- c(colors,"red")}
else {
colors <- c(colors,"green")}
}
# 4. 학생 점크기 2 / 교수 점크기 6
sizes <- c()
for (i in 1:length(gubun2)){
if(gubun2[i]=='S'){
sizes <- c(sizes,2)}
else {
sizes <- c(sizes,6)}
}
# 5. 실행
plot(g,layout=layout.fruchterman.reingold,
vertex.size=sizes,edge.arrow.size=0.5,
vertex.color=colors)
# 5. 실행
plot(g,layout=layout.fruchterman.reingold,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors)
# 5. 실행
plot(g,layout=layout.fruchterman.reingold,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA)
# 5. 실행(2)
plot(g,layout=layout.kamada.kawai,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA)
# 5. 학생 circle / 교수 square
shapes <- c()
# 5. 학생 circle / 교수 square
shapes <- c()
for (i in 1:length(gubun2)){
if(gubun2[i]=='S'){
shapes <- c(shapes,"circle")}
else {
shapes <- c(shapes,"square")}
}
# 6. 실행
plot(g,layout=layout.fruchterman.reingold,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA)
# 6. 실행(2)
plot(g,layout=layout.kamada.kawai,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA)
# 6. 실행
plot(g,layout=layout.fruchterman.reingold,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA,
vertex.shapes=shapes)
# 6. 실행(2)
plot(g,layout=layout.kamada.kawai,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA,
vertex.shapes=shapes)
# 5. 학생 circle / 교수 square
shapes <- c()
for (i in 1:length(gubun2)){
if(gubun2[i]=='S'){
shapes <- c(shapes,"circle")}
else {
shapes <- c(shapes,"square")}
}
# 6. 실행
plot(g,layout=layout.fruchterman.reingold,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA,
vertex.shapes=shapes)
# 5. 학생 circle / 교수 square
shapes <- c()
for (i in 1:length(gubun2)){
if(gubun2[i]=='S'){
shapes <- c(shapes,"circle")}
else {
shapes <- c(shapes,"square")}
}
# 6. 실행
plot(g,layout=layout.fruchterman.reingold,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA,
vertex.shape=shapes)
# 6. 실행(2)
plot(g,layout=layout.kamada.kawai,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA,
vertex.shape=shapes)
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
virus1
#1.
virus1 <- read.csv('메르스전염현황.csv')
virus1
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="d:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="d:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="d:\\dudwlsrla92\\R_Data_Analysis\\Part4\\mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="d:\\dudwlsrla92\\R_Data_Analysis\\Part4\\mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="d://dudwlsrla92//R_Data_Analysis//Part4//mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="d://dudwlsrla92//R_Data_Analysis//Part4//mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="d://dudwlsrla92//R_Data_Analysis//Part4//mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="d:\\dudwlsrla92\\R_Data_Analysis\\Part4\\mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="d:\\dudwlsrla92\\R_Data_Analysis\\Part4\\mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="d:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="d:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
### ===============================================================
###  군집분석2
### ===============================================================
getwd()
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/data/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/data/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="Part4/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="Part4/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="Part4/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="Part4/mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
# 6. 실행 layout.kamada.kawai
plot(g,layout=layout.kamada.kawai,
vertex.size=sizes,edge.arrow.size=0.05,
vertex.color=colors,vertex.label=NA,
vertex.shape=shapes)
#1.
virus1 <- read.csv('메르스전염현황.csv',header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="D:/dudwlsrla92/R_Data_Analysis/Part4/mers.html")
