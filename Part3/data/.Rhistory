a<- k*i
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in 1:9){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in 1:9){
a<- k*i
}
print(a)
}
for3<- function(z){
for (i in 2:z*1:10){
print(i)}
}
for4(9)
for3<- function(z){
for (i in 2:z*1:10){
print(i)}
}
for3(9)
for3(1)
for3(2)
for3(3)
for3(4)
for3(4)
for3(5)
for3(2)
for3<- function(z){
for (i in 1:z*1:10){
print(i)}
}
for3(2)
for3(1)
for3(9)
for3<- function(z){
for (i in 1:z*1:10){
print(i)}
}
for3(9)
### 구구단
for (i in 1:81){
for(k in 1:9){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in i:9){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in 1:i){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in 2){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in 1){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in 1){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in 9){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in 2){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in 2){
a<- k+1*i
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in 2){
a<- k+1*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in 2){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in i+1){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in i:i+1){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in i:i+1){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in 2){
a<- k*i
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in 2:9){
for(m in k){
a<- k*i
}
}
print(a)
}
### 구구단
for (i in 1:81){
for(k in 2:9){
for(m in k){
a<- k*i
}
}
print(a)
}
### 구구단
for (i in 1:9){
for(k in 2){
a<- k*i
}
print(a)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1+1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in 1:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:5){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
for (i in 1:7){
line <- ''
if (i != 1){
for(k in 1:(i-1))
line <- str_c(line, ' ')
}
for(k in i:5){
line <- str_c(line, '#')
}
print(line)
}
for (i in 1:5){
line <- ''
if (i != 1){
for(k in 1:(i-1))
line <- str_c(line, ' ')
}
for(k in i:5){
line <- str_c(line, '#')
}
print(line)
}
i:4
for (i in 1:7){
line <- ''
for(k in i:4)
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
for (i in 1:5){
line <- ''
if (i != 1){
for(k in 1:(i-1))
line <- str_c(line, ' ')
}
for(k in i:5){
line <- str_c(line, '#')
}
print(line)
}
>
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in 4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in 1:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in 3:1){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in 1:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in 4:1){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
###다이아몬드 그리기
for (i in 1:7){
line <- ''
for(k in i:4){
line <- str_c(line, ' ')
}
for(k in i:1){
line <- str_c(line, '#')
}
print(line)
}
### 구구단
for (i in 2:9){
line <- str_c(i, '단')
print(line)
for (k in 1:9) {
line <- str_c(i, ' * ', k, ' = ', i*k)
print(line)
}
}
### 약수 구하는함수
getDenominator <- function(x){
den <- c(1)
if (x >= 2){
for (i in 2:x){
if (x %% i == 0)
den <- c(den,i)
}
}
return(den)
}
getDenominator(6)
getDenominator(60)
### 구구단
for (i in 2:9){
line <- str_c(i, '단')
print(line)
for (k in 1:9) {
line <- str_c(i, ' * ', k, ' = ', i*k)
print(line)
}
}
### 구구단
for (i in 2:9){
line <- str_c(i, '단')
for (k in 1:9) {
line <- str_c(i, ' * ', k, ' = ', i*k)
print(line)
}
}
for (k in 1:9) {
line <- str_c(i, ' * ', k, ' = ', i*k)
print(line)
}
}
for (i in 2:9){
line <- str_c(i, '단')
print(line)
for (k in 1:9) {
line <- str_c(i, ' * ', k, ' = ', i*k)
print(line)
}
}
### 구구단
for (i in 2:9){
line <- str_c(i, '단')
print(line)
for (k in 1:9) {
line <- str_c(i*k, ' * ', k, ' = ')
print(line)
}
}
char <- c('apple','Apple','APPLE','banana','grape')
grep('apple',char)
grep(char2,char)
grep('apple','banana',char)
grep(char2,char)
grep(paste(char2,collapse='l'),char1,value=T)
char  <- c('apple','Apple','APPLE','banana','grape')
grep('apple',char)
grep2 <- c('apple','banana')
grep(paste(char2,collapse='l'),char1,value=T)
grep(paste(char2,collapse='|'),char1,value=T)
grep(paste(char2,collapse='|'),char,value=T)
char  <- c('apple','Apple','APPLE','banana','grape')
grep('apple',char)
grep2 <- c('apple','banana')
grep(paste(char2,collapse='|'),char,value=T)
char  <- c('apple','Apple','APPLE','banana','grape')
grep('apple',char)
grep2 <- c('apple','banana')
grep(paste(char2,collapse='|'),char,value=T)
char2 <- c('apple','banana')
grep(paste(char2,collapse='|'),char,value=T)
grep('pp',char)
grep('pp',char,value=T)
grep('pp',char)
grep('pp',char,value=T)
grep('^A',char,value=T)
grep('e$',char,value=T)
char3 <- c('grape1','apple1','apple','orange','Apple')
grep('ap',char2,value=T)
grep('ap',char2,value=T)
grep('ap',char2,value=T)
grep('ap',char3,value=T)
grep('[1-9]',char3,value=T)
grep('[[:upper:]]',char2,value=T)
grep('[[:upper:]]',char3,value=T)
grep('[A-Z]',char3,value=T)
grep('\\d',char3,value=T)        # 숫자 포함 단어
char
nchar(char)
nchar('Young Jin Kim')
paste("a","b","c")
paste("a","b","c",sep='')
paste("a","b","c",sep=',')
paste('I','\'m','Hungry')
substr('abc123',3,3)
substr('abc123',3,4)
straplit('2019/06/05',split='/')
strsplit('2019/06/05',split='/')
substr('abc123',3,3)
substr('abc123',3,4)
strsplit('2019/06/05',split='/') # 지정글자 기준으로 분리
grep('-','010-2900-2344')    # grep으로는 위치를 찾을 수 없음
regexpr('-','010-2900-2344') # 처음 나오는 '-'문자 위치 찾기
grep('-','010-2900-2344')    # grep으로는 위치를 찾을 수 없음
regexpr('-','010-2900-2344') # 처음 나오는 '-'문자 위치 찾기
regexpr('-','010-2900-2344') # 처음 나오는 '-'문자 위치 찾기
grep('-','010-2900-2344')    # grep으로는 위치를 찾을 수 없음
regexpr('-','010-2900-2344') # 처음 나오는 '-'문자 위치 찾기
regexpr('-','010-2900-2344')) # 처음 나오는 '-'문자 위치 찾기
regexpr('-','010-2900-2344') # 처음 나오는 '-'문자 위치 찾기
