ggplot(연령대_sex_income,aes(x=sex,y=mean_income,fill=sex))+
geom_bar(stat="identity",color="black",position="dodge") + # geom_col(position="dodge") 같다.
facet_wrap(~연령대,ncol=3)
ggplot(연령대_sex_income,aes(x=sex,y=mean_income,fill=sex))+
geom_bar(stat="identity",color="black",position="dodge") + # geom_col(position="dodge") 같다.
facet_wrap(~연령대,ncol=5)
ggplot(연령대_sex_income,aes(x=sex,y=mean_income,fill=sex))+
geom_bar(stat="identity",color="black",position="dodge") + # geom_col(position="dodge") 같다.
facet_wrap(~연령대,ncol=4)
ggplot(연령대_sex_income,aes(x=연령대,y=mean_income,fill=sex))+
geom_bar(stat="identity",color="black",position="dodge") + # geom_col(position="dodge") 같다.
#  facet_wrap(~연령대,ncol=4) x를 sex로 바꿔야함.
# 2) line 그래프(나이&성별)
age_sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
ggplot(연령대_sex_income,aes(x=연령대,y=mean_income,fill=sex))+
geom_bar(stat="identity",color="black",position="dodge") + # geom_col(position="dodge") 같다.
#  facet_wrap(~연령대,ncol=4) x를 sex로 바꿔야함.
# 2) line 그래프(나이&성별)
age_sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
ggplot(연령대_sex_income,aes(x=연령대,y=mean_income,fill=sex))+
geom_bar(stat="identity",color="black",position="dodge") # geom_col(position="dodge") 같다.
age_sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
age_sex_income
ggplot(age_sex_income,aes(x=age,y=mean_income,col=sex))+
geom_line(size=1)
class(welfare$code_job)
table(welfare$code_job)
list_job <- read_excel("Koweps_Codebook.xlsx", col_names=T,sheet=2)
list_job <- read_excel("09-1.Koweps_Codebook.xlsx", col_names=T,sheet=2)
head(list_job)
dim(list_job)
a<-merge(list_job,welfare$code_job)
a
a<-merge(list_job,welfare$code_job)
a
welfare <- left_join(welfare, list_job,id="code_job")
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job,job) %>%
head(10)
a<-merge(welfare$code_job,list_job)
a
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
job_income
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
head(10)
job_income
ggplot(job_income,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col()
ggplot(job_income,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col() +
coord_flip()
ggplot(job_income,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip()
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
tail(10)
ggplot(job_income,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
head(10)
job_income
ggplot(job_income,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_income2 <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
tail(10)
ggplot(job_income2,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_income2
job_income
job_income2
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
head(10)
job_income
job_income
ggplot(job_income,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_income2 <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
tail(10)
ggplot(job_income2,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
tail(10)
job_income
ggplot(job_income,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_income2 <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
head(10)
ggplot(job_income2,aes(x= reorder(job,mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
ggplot(job_income2,aes(x= reorder(job,-mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_income2 <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
ggplot(job_income2,aes(x= reorder(job,-mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_income2 <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
head(10)
ggplot(job_income2,aes(x= reorder(job,-mean_income),y=mean_income,fill=job))+
geom_col(color="black") +
coord_flip() # 가로로 만들어준다.
job_male<- welfare %>%
filter(!is.na(job) & se == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
head(10)
job_male<- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
head(10)
job_female<- welfare %>%
filter(!is.na(job) & sex == "female") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrage(desc(n)) %>%
head(10)
남자
남자
job_male<- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrage(desc(n)) %>%
head(10)
job_male<- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female<- welfare %>%
filter(!is.na(job) & sex == "female") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
job_male
ggplot(job_male,aes(x=reorder(job,n),y=n,fill=job))+
geom_col()+
coord_flip()
ggplot(job_female,aes(x=reorder(job,n),y=n,fill=job))+
geom_col()+
coord_flip()
ggplot(job_female,aes(x=reorder(job,n),y=n,fill=reorder(job,n)))+
geom_col()+
coord_flip()
job
ggplot(job_female,aes(x=reorder(job,n),y=n,fill=job))+
geom_col()+
coord_flip()
ggplot(job_male,aes(x=reorder(job,n),y=n,fill=job))+
geom_col(col="black")+
coord_flip()
ggplot(job_female,aes(x=reorder(job,n),y=n,fill=job))+
geom_col(col="black")+
coord_flip()
ggplot(job_male,aes(x=reorder(job,n),y=n,fill=job))+
geom_col(col="black")+
coord_flip()
class(welfare$religion)
table(welfare$religion)
# 종교 유무에 따른 이름부여
welfare$religion <- ifelse(welfare$religion == 1, "yes","no")
table(welfare$religion)
qplot(welfare$religion)
class(welfare$marriage)
table(welfare$marriage)
#혼인 상태에 따른 이름부여.
welfare$group_marriage <- ifelse(welfare$marriage == 1, "marriage",
ifelse(welfare$marriage == 3, "divorce",NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage))
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group =sum(n)) %>%
mutate(pct = round(n/tot_gorup*100,1))
religion_marriage
#혼인 상태에 따른 이름부여.
welfare$group_marriage <- ifelse(welfare$marriage == 1, "marriage",
ifelse(welfare$marriage == 3, "divorce",NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage))
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group =sum(n)) %>%
mutate(pct = round(n/tot_gorup*100,1))
qplot(welfare$group_marriage)
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(religion_group = sum(n)) %>%
mutate(pct = round(n/tot_gorup*100,1))
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(religion_group = sum(n)) %>%
mutate(pct = round(n/religion_group*100,1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(religion_group = sum(n)) %>%
mutate(pct = round(n/religion_group*100,1))
religion_marriage
divorce <- religion_marriage %>%
filter(gorup_marriage == "divorce") %>%
select(religion,pct)
divorce
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion,pct)
divorce
# 그래프 만들기
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col()
# 그래프 만들기
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col(col='black')
# 그래프 만들기
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col(col='black') +
theme_bw(theme_family="baedal")
# 그래프 만들기
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col(col='black') +
theme_bw(base_family="baedal")
# 그래프 만들기
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col(col='black') +
theme_bw(base_family="baedal",size=10) +
# 그래프 만들기
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col(col='black') +
theme_bw(base_family="baedal",size=10) +
title('종교 유무에 따른 이혼률')
# 그래프 만들기
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col(col='black') +
theme_bw(base_family="baedal",base_size=10) +
title('종교 유무에 따른 이혼률')
# 그래프 만들기
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col(col='black') +
theme_bw(base_family="baedal",base_size=10) +
ggtitle('종교 유무에 따른 이혼률')
연령대_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%      # NA제거
group_by(연령대, group_marriage) %>%
summarise(n=n()) %>%
mutate(연령대_group = sum(n)) %>%
mutate(pct = round(n/연령대_group*100,1))
연령대_marriage
filter(연령대 != "10대" & group_marriage == "divorce" %>%
연령대_divorce <- 연령대_marriage %>%
filter(연령대 != "10대" & group_marriage == "divorce") %>%
select(연령대,pct)
ggplot(연령대_divorce, aes(x= 연령대, y=pct, fill=연령대)) +
geom_col()
연령대_divorce <- 연령대_marriage %>%
filter(연령대 != "10대" & group_marriage == "divorce") %>%
select(연령대,pct)
연령대_divorce
ggplot(연령대_divorce, aes(x= 연령대, y=pct, fill=연령대)) +
geom_col()
ggplot(연령대_divorce, aes(x= 연령대, y=pct, fill=연령대)) +
geom_col(col='black')
연령대_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & 연령대 != "10대") %>%
group_by(연령대, religion, group_marriage)  %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
연령대_religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%      # NA제거
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
religion_marriage
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion,pct)
divorce
ggplot(divorce,aes(x=religion,y=pct,fill=religion))+
geom_col(col='black') +
theme_bw(base_family="baedal",base_size=10) +
ggtitle('종교 유무에 따른 이혼률')
연령대_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%      # NA제거
group_by(연령대, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
연령대_marriage
연령대_divorce <- 연령대_marriage %>%
filter(연령대 != "10대" & group_marriage == "divorce") %>%
select(연령대,pct)
연령대_divorce
ggplot(연령대_divorce, aes(x= 연령대, y=pct, fill=연령대)) +
geom_col(col='black')
연령대_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & 연령대 != "10대") %>%
group_by(연령대, religion, group_marriage)  %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
연령대_religion_marriage
df_diverce <- 연령대_religion_marriage %>%
filter(group_marriage == "devorce") %>%
select(연령대, religion, pct)
df_diverce
연령대_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & 연령대 != "10대") %>%
group_by(연령대, religion, group_marriage)  %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
연령대_religion_marriage
df_divorce <- 연령대_religion_marriage %>%
filter(group_marriage == "devorce") %>%
select(연령대, religion, pct)
df_divorce
ggplot(df_divorcde,aes(x=연령대, y=pct, fill=religion))+
geom_col(position="dodge",col="black")
ggplot(df_divorce,aes(x=연령대, y=pct, fill=religion))+
geom_col(position="dodge",col="black")
df_divorce <- 연령대_religion_marriage %>%
filter(group_marriage == "devorce") %>%
select(연령대, religion, pct)
df_divorce
ggplot(df_divorce,aes(x=연령대, y=pct, fill=religion))+
geom_col(position="dodge",col="black")
df_divorce <- 연령대_religion_marriage %>%
filter(group_marriage == "devorce") %>%
select(연령대, religion, pct)
df_divorce
연령대_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & 연령대 != "10대") %>%
group_by(연령대, religion, group_marriage)  %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
연령대_religion_marriage
df_divorce <- 연령대_religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(연령대, religion, pct)
df_divorce
ggplot(df_divorce,aes(x=연령대, y=pct, fill=religion))+
geom_col(position="dodge",col="black")
ggplot(df_divorce,aes(x=연령대, y=pct, fill=religion))+
geom_col(position="dodge",col="black") +
theme_bw(base_family="baedal",base_size=10) +
ggtitle('')
class(welfare$code_region)
table(welfare$code_region)
# 지역코드 목록 만들기.
list_region <- data.frame(code_region = c(1:7),
region = c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주도"))
list_region
welfare <- left_join(welfare, list_region, id = "code_region")
welfare %>%
select(code_region,region) %>%
head
region_연령대 <- welfare %>%
group_by(region, 연령대) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,2))
head(region_연령대)
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black")
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black") +
coord_flip()
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black") +
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black")
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black") +
coord_flip()
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
coord_flip()
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
facet_wrap(~region,ncol=4) +
coord_flip()
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
facet_wrap(~region,ncol=4) +
coord_flip()
ggplot(region_연령대,aes(x=연령대,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
facet_wrap(~region,ncol=) +
coord_flip()
ggplot(region_연령대,aes(x=연령대,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
facet_wrap(~region,ncol=2) +
coord_flip()
ggplot(region_연령대,aes(x=연령대,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
facet_wrap(~region,ncol=3) +
coord_flip()
ggplot(region_연령대,aes(x=연령대,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
#  facet_wrap(~region,ncol=3) +
coord_flip()
ggplot(region_연령대,aes(x=연령대,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
facet_wrap(~region,ncol=3) +
coord_flip()
ggplot(region_연령대,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
#  facet_wrap(~region,ncol=3) + 이걸 쓰려면 x = 연령대
coord_flip()
list_order_old <- region_연령대 %>%
filter(연령대 == c('60대','70대','80대','90대이상')) %>%
arrange(desc(pct))
list_order_old <- region_연령대 %>%
filter(연령대 == '60대','70대','80대','90대이상') %>%
arrange(desc(pct))
list_order_old
list_order_old <- region_연령대 %>%
filter(연령대 == c('60대','70대','80대','90대이상')) %>%
arrange(desc(pct))
list_order_old
order <- list_order_old$region
order
list_order_old <- region_연령대 %>%
filter(연령대 == c('60대','70대','80대','90대이상')) %>%
arrange(desc(pct))
list_order_old
#지역명 순서 변수 만들기
order <- list_order_old$region
#그래프
ggplot(list_order_old,aes(x=region,y=pct,fill=연령대))+
geom_col(col="black",position="dodge") +
coord_flip() +
scale_x_discrete(limits=order)
list_order_old <- region_연령대 %>%
filter(연령대 == '60대' & '70대' & '80대' & '90대이상') %>%
arrange(desc(pct))
list_order_old <- region_연령대 %>%
filter(연령대 == '60대' & '70대' & '80대' & '90대이상') %>%
arrange(desc(pct))
