ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot()
# 2)
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity")
# 3)
# 1)
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot()
# 2)
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity")
# 2)
ggplot(diamonds,aes(x=cut,y=as.numeric(price))) +
geom_bar(stat="identity")
# 2)
ggplot(diamonds,aes(x=cut,y=as.factor(price))) +
geom_bar(stat="identity")
# 2)
ggplot(diamonds,aes(x=cut,y=as.factor(price))) +
geom_bar(stat="identity")
# 2)
ggplot(diamonds,aes(x=cut,y=as.factor(price))) +
geom_bar(stat="identity")
# 2)
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity")
# 2)
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity")
# 1)
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot()
# 2)
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity")
View(diamonds)
# 3) cut과 color에 따른 가격의 변화를 보여주는 그래프
arrange(diamonds,color)
# 3) cut과 color에 따른 가격의 변화를 보여주는 그래프
arrange(diamonds,cut)
# 3) cut과 color에 따른 가격의 변화를 보여주는 그래프
arrange(diamonds,cut,color)
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot()
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_bar(stat="identity")
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot(fill=c('Orange red','steel blue','yellow','olive Drab2','orchid2'))
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot(fill=c('Orange red','steel blue','yellow','olive Drab2','orchid2'))+
ggtitle("6번 'compact', 'subcompact', 'suv'의 cty")
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot(fill=c('Orange red','steel blue','yellow','olive Drab2','orchid2'))+
ggtitle("7번(1) cut에 따른 carat(돗수)의 상자그림 ")
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot(fill=c('Orange red2','steel blue','yellow','olive Drab2','orchid2'))+
ggtitle("7번(1) cut에 따른 carat(돗수)의 상자그림 ")
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot(fill=c('light salmon2','steel blue','yellow','olive Drab2','orchid2'))+
ggtitle("7번(1) cut에 따른 carat(돗수)의 상자그림 ")
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot(fill=c('sienna1','steel blue','yellow','olive Drab2','orchid2'))+
ggtitle("7번(1) cut에 따른 carat(돗수)의 상자그림 ")
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=clarity)) +
geom_boxplot(fill=c('sienna1','steel blue','yellow','olive Drab2','orchid2'))+
ggtitle("7번(1) cut에 따른 돗수의 상자그림 ")
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=clarity)) +
geom_boxplot()
# 1) cut의 돗수를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=clarity)) +
geom_point()
)
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity") +
ylim(300,3000)
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",  fill=c('sienna1','steel blue','yellow','olive Drab2','orchid2'))+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity", color=c('sienna1','steel blue','yellow','olive Drab2','orchid2'))+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity", fill=factor(cut))+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity", fill=factor(cut))+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
ggplot(diamonds,aes(x=cut,y=price))
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity", fill=factor(price))+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity", fill=factor(price))+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity", fill='steel blue')+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity", fill='steel blue', color='black')+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",fill="steel blue", color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",fill="steel blue", line="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",fill="steel blue", lines="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",fill="steel blue", colours="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",fill="steel blue", colour="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
ggplot(suv,aes(x=reorder(manufacturer,-cty),y=cty)) +
geom_bar(stat="identity",fill="steel blue", color="black")+
ggtitle('3번 [SUV] 평균 cty(도시연비) top5 ')
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",fill="steel blue",color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",fill="steel blue")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
# 3) cut과 color에 따른 가격의 변화를 보여주는 그래프
arrange(diamonds,cut,clarity)
# 3) cut과 color에 따른 가격의 변화를 보여주는 그래프
View(arrange(diamonds,cut,clarity))
# 2) cut에 따른 가격의 변화를 보여주는 그래프
ggplot(diamonds,aes(x=cut,y=price)) +
geom_bar(stat="identity",fill="steel blue")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")
cut <- diamonds %>% selec(cut,price)
cut <- diamonds %>% select(cut,price)
cut
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise_each(price_mean=mean(price))
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
cut
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity")
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity")+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill="cut")+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=cut)+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=factor(cut))+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=as.factor(cut))+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill="steel blue")+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Orange red','steel blue','yellow','green','pink'))+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Orange red','steel blue','yellow','green','pink'),color="black")+
ylim(0,5000)
# 2) cut에 따른 가격의 변화를 보여주는 그래프
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Orange red','steel blue','yellow','green','pink'),color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
# 3) cut과 color에 따른 가격의 변화를 보여주는 그래프
View(arrange(diamonds,cut,clarity))
# 2) cut에 따른 가격의 변화를 보여주는 그래프
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Orange red','steel blue','yellow','green','pink'),color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Tan2','steel blue','yellow2','green3','pink'),color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Tan1','steel blue','yellow2','green3','pink'),color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
# 연습문제 1
ggplot(mpg,aes(x=cty,y=hwy)) +
geom_point(color='steel blue',size=5)+
ggtitle('1번 도시 연비와 고속도로 연비의 산점도')
library(ggplot2)
library(dplyr)
### 연습문제 1
ggplot(mpg,aes(x=cty,y=hwy)) +
geom_point(color='steel blue',size=3)+
ggtitle('1번 도시 연비와 고속도로 연비의 산점도')
### 연습문제 2
midwest2 <- midwest %>% filter(poptotal<500000,popasian<10000)
ggplot(midwest2,aes(x=poptotal,y=popasian))+
geom_point(color='steel blue',size=2)+
ggtitle('2번 \n전체인구 50만 이하 \n아시아인 인구 1만 이하인 지역')
### 연습문제 3
suv <- mpg %>% filter(class=='suv') %>%
select(manufacturer,cty,class) %>%
group_by(manufacturer) %>%
summarise_each(funs(mean),cty) %>%
arrange(desc(cty)) %>%
head(5)
ggplot(suv,aes(x=reorder(manufacturer,-cty),y=cty)) +
geom_bar(stat="identity",fill="steel blue", color="black")+
ggtitle('3번 [SUV] 평균 cty(도시연비) top5 ')
### 연습문제 4
class<-mpg %>%
select(class) %>%
group_by(class) %>%
summarise(n=n())
ggplot(class,aes(x=reorder(class,-n),y=n))+
geom_bar(stat="identity",fill="steel blue",color="black")+
ggtitle('4번 자동차 종류별 빈도')
### 연습문제 5
ggplot(economics,aes(x=date,y=psavert))+
geom_line(color="steel blue")+
ggtitle('5번 시간에 따른 저축률의 변화.')
### 연습문제 6
a <- mpg %>%
filter(class %in% c('compact','subcompact','suv')) %>%
select(class,cty)
ggplot(a, aes(x=class,y=cty ,group=class))+
geom_boxplot(fill=c('Orange red','steel blue','yellow')) +
ggtitle("6번 'compact', 'subcompact', 'suv'의 cty")
### 연습문제 7
diamonds
# 1)
ggplot(diamonds,aes(x=cut,y=carat)) +
geom_boxplot()
# 2) cut에 따른 가격의 변화를 보여주는 그래프
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Tan1','steel blue','yellow2','green3','pink'),color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
# 3)
### 연습문제 2
midwest2 <- midwest %>% filter(poptotal<500000,popasian<10000)
ggplot(midwest2,aes(x=poptotal,y=popasian))+
geom_point(color='steel blue',size=2)+
ggtitle('2번 \n전체인구 50만 이하 \n아시아인 인구 1만 이하인 지역')
### 연습문제 2
midwest2 <- midwest %>% filter(poptotal<=500000,popasian<=10000)
options(10)
### 연습문제 2
midwest2 <- midwest %>% filter(poptotal<=500000,popasian<=10000)
ggplot(midwest2,aes(x=poptotal,y=popasian))+
geom_point(color='steel blue',size=2)+
ggtitle('2번 \n전체인구 50만 이하 \n아시아인 인구 1만 이하인 지역')
### 연습문제 3
suv <- mpg %>% filter(class=='suv') %>%
select(manufacturer,cty,class) %>%
group_by(manufacturer) %>%
summarise_each(funs(mean),cty) %>%
arrange(desc(cty)) %>%
head(5)
ggplot(suv,aes(x=reorder(manufacturer,-cty),y=cty)) +
geom_bar(stat="identity",fill=manufacturer, color="black")+
geom_col()+
ggtitle('3번 [SUV] 평균 cty(도시연비) top5 ')
### 연습문제 3
suv <- mpg %>% filter(class=='suv') %>%
select(manufacturer,cty,class) %>%
group_by(manufacturer) %>%
summarise_each(funs(mean),cty) %>%
arrange(desc(cty)) %>%
head(5)
ggplot(suv,aes(x=reorder(manufacturer,-cty),y=cty)) +
geom_bar(stat="identity", color="black")+
geom_col()+
ggtitle('3번 [SUV] 평균 cty(도시연비) top5 ')
### 연습문제 3
suv <- mpg %>% filter(class=='suv') %>%
select(manufacturer,cty,class) %>%
group_by(manufacturer) %>%
summarise_each(funs(mean),cty) %>%
arrange(desc(cty)) %>%
head(5)
ggplot(suv,aes(x=reorder(manufacturer,-cty),y=cty, fill=manufacturer)) +
geom_bar(stat="identity", color="black")+
geom_col()+
ggtitle('3번 [SUV] 평균 cty(도시연비) top5 ')
### 연습문제 3
suv <- mpg %>% filter(class=='suv') %>%
select(manufacturer,cty,class) %>%
group_by(manufacturer) %>%
summarise_each(funs(mean),cty) %>%
arrange(desc(cty)) %>%
head(5)
ggplot(suv,aes(x=reorder(manufacturer,-cty),y=cty, fill=manufacturer)) +
geom_bar(stat="identity", color="black")+
ggtitle('3번 [SUV] 평균 cty(도시연비) top5 ')
### 연습문제 4
class<-mpg %>%
select(class) %>%
group_by(class) %>%
summarise(n=n())
ggplot(class,aes(x=reorder(class,-n),y=n))+
geom_bar(stat="identity",fill="steel blue",color="black")+
ggtitle('4번 자동차 종류별 빈도')
### 연습문제 4
class<-mpg %>%
select(class) %>%
group_by(class) %>%
summarise(n=n())
ggplot(class,aes(x=reorder(class,-n),y=n),fill=class)+
geom_bar(stat="identity",color="black")+
ggtitle('4번 자동차 종류별 빈도')
### 연습문제 4
class<-mpg %>%
select(class) %>%
group_by(class) %>%
summarise(n=n())
ggplot(class,aes(x=reorder(class,-n),y=n),fill=class)+
geom_bar(stat="identity")+
ggtitle('4번 자동차 종류별 빈도')
### 연습문제 4
class<-mpg %>%
select(class) %>%
group_by(class) %>%
summarise(n=n())
ggplot(class,aes(x=reorder(class,-n),y=n),fill=factor(class))+
geom_bar(stat="identity",color="black")+
ggtitle('4번 자동차 종류별 빈도')
### 연습문제 4
class<-mpg %>%
select(class) %>%
group_by(class) %>%
summarise(n=n())
ggplot(class,aes(x=reorder(class,-n),y=n,fill=factor(class)))+
geom_bar(stat="identity",color="black")+
ggtitle('4번 자동차 종류별 빈도')
### 연습문제 5
ggplot(economics,aes(x=date,y=psavert))+
geom_line(color="steel blue")+
ggtitle('5번 시간에 따른 저축률의 변화.')
### 연습문제 6
a <- mpg %>%
filter(class %in% c('compact','subcompact','suv')) %>%
select(class,cty)
ggplot(a, aes(x=class,y=cty ,group=class))+
geom_boxplot(fill=c('Orange red','steel blue','yellow')) +
ggtitle("6번 'compact', 'subcompact', 'suv'의 cty")
### 연습문제 6
a <- mpg %>%
filter(class %in% c('compact','subcompact','suv')) %>%
select(class,cty)
ggplot(a, aes(x=class,y=cty ,group=class,fill=class))+
geom_boxplot() +
ggtitle("6번 'compact', 'subcompact', 'suv'의 cty")
### 연습문제 7
diamonds
# 1)
ggplot(diamonds,aes(x=cut,fill=cut)) +
geom_bar()
# 2) cut에 따른 가격의 변화를 보여주는 그래프
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Tan1','steel blue','yellow2','green3','pink'),color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
# 3)
### 연습문제 7
diamonds
# 1)
ggplot(diamonds,aes(x=cut,fill=cut)) +
geom_bar(color="black")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
ggplot(cut,aes(x=cut,y=price_mean))+
geom_bar(stat="identity",fill=c('Tan1','steel blue','yellow2','green3','pink'),color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
# 3)
### 연습문제 7
diamonds
# 1)
ggplot(diamonds,aes(x=cut,fill=cut)) +
geom_bar(color="black")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
ggplot(cut,aes(x=cut,y=price_mean,fill=cut))+
geom_bar(stat="identity",color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
# 3)
### 연습문제 7
diamonds
# 1)
ggplot(diamonds,aes(x=cut,fill=cut)) +
geom_bar(color="black")
# 2) cut에 따른 가격의 변화를 보여주는 그래프
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
ggplot(cut,aes(x=cut,y=price_mean,fill=cut))+
geom_bar(stat="identity",color="black")+
ggtitle("7번(2) cut에 따른 가격의 변화 ")+
ylim(0,5000)
# 3)
ggplot(diamonds,aes(x=cut,fill=cut)) +
geom_bar(color="black")
### 연습문제 2
midwest2 <- midwest %>% filter(poptotal<=500000,popasian<=10000)
ggplot(midwest2,aes(x=poptotal,y=popasian))+
geom_point(color='steel blue',size=2)+
ggtitle('2번 \n전체인구 50만 이하 \n아시아인 인구 1만 이하인 지역')
color <- diamonds %>%
select(color,price) %>%
group_by(color) %>%
summarise(price_mean=mean(price,na.rm=T))
ggplot(color,aes(x=color,y=price_mean,fill=cut))+
geom_bar(stat="identity",color="black")
color <- diamonds %>%
select(color,price) %>%
group_by(color) %>%
summarise(price_mean=mean(price,na.rm=T))
color
ggplot(color,aes(x=color,y=price_mean,fill=color))+
geom_bar(stat="identity",color="black")
cut <- diamonds %>%
select(cut,price) %>%
group_by(cut) %>%
summarise(price_mean=mean(price,na.rm=T))
cut2 <- ggplot(cut,aes(x=cut,y=price_mean,fill=cut))+
geom_bar(stat="identity",color="black")+
ylim(0,5000)
color <- diamonds %>%
select(color,price) %>%
group_by(color) %>%
summarise(price_mean=mean(price,na.rm=T))
color2 <- ggplot(color,aes(x=color,y=price_mean,fill=color))+
geom_bar(stat="identity",color="black")
grid.arrange(cut2,color2,ncol=2, top="cut 과 color")
grid.arrange(cut2,color2,ncol=2, top="cut 과 color")
# Part 2
###=======================================================================================
### 비정형 데이터 분석 후 워드 클라우드 생성하기. ========================================
###=======================================================================================
setwd("D:/dudwlsrla92/R_Data_Analysis/Part2/stage1_WordCloud/Ex01_Seoul_Response")
getwd()
library(KoNLP)
library(wordcloud)
install.packages('rJava')
install.packages("rJava")
library(rJava)
mergeUserDic(data.frame('서진수','ncn'))
useSejongDic() #한글에 저장되어 있는 세종사전 사용함을 알려줌.
